<div class="px-4">
    @if (Itineraries != null)
    {
        <div class="title">
            <h2 class="my-3">@Itineraries.Count results</h2>
            <select class="custom-select" @bind=_chosenSortOrder>
                <option value=@SortOrder.Price>Cheapest</option>
                <option value=@SortOrder.Duration>Quickest</option>
            </select>
        </div>

        @foreach (var item in SortedItineraries)
        {
            <div class="mb-4 d-flex align-items-center">
                <ul class="list-group">
                    <li class="list-group-item d-flex align-items-center">
                        <SearchResultFlightSegment Symbol="▶" Flight=item.Outbound/>
                    </li>
                    <li class="list-group-item d-flex align-items-center">
                        <SearchResultFlightSegment Symbol="◀" Flight=item.Return/>
                    </li>
                </ul>
                <div class="price ml-3">
                    <h3>@item.Price.ToString("$0")</h3>
                    <button class="btn" @onclick=@(() => OnAddItinerary(item))>Add</button>
                </div>
            </div>
        }
    }
</div>

@code
{
    // Parameters
    [Parameter]
    public IReadOnlyList<Itinerary> Itineraries { get; set; }

    [Parameter]
    public Action<Itinerary> OnAddItinerary { get; set; }

    // Private state
    private SortOrder _chosenSortOrder;

    private IEnumerable<Itinerary> SortedItineraries
        => _chosenSortOrder == SortOrder.Price
            ? Itineraries.OrderBy(x => x.Price)
            : Itineraries.OrderBy(x => x.TotalDurationHours);

    enum SortOrder
    {
        Price,
        Duration
    }
}